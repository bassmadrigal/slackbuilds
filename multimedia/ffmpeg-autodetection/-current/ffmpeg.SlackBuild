#!/bin/bash

# Slackware build script for ffmpeg

# Copyright 2010-2017  Heinz Wiesinger, Amsterdam, The Netherlands
# Copyright 2017, 2018  Patrick J. Volkerding, Sebeka, MN, USA
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# Originally written by core (eroc@linuxmail.org)
# Modified by Robby Workman <rworkman@slackbuilds.org>

cd $(dirname $0) ; CWD=$(pwd)

PKGNAM=ffmpeg
VERSION=${VERSION:-$(echo $PKGNAM-*.tar.xz | rev | cut -f 3- -d . | cut -f 1 -d - | rev)}
BUILD=${BUILD:-1}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i586 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

TMP=${TMP:-/tmp}
PKG=$TMP/package-$PKGNAM

NUMJOBS=${NUMJOBS:-" -j$(expr $(nproc) + 1) "}

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

# If PulseAudio is not found, use the _alsa $TAG and disable it in the build:
if [ ! -r /usr/lib${LIBDIRSUFFIX}/pkgconfig/libpulse.pc ]; then
  TAG="_alsa"
  PULSEAUDIO=no
fi

# If the variable PRINT_PACKAGE_NAME is set, then this script will report what
# the name of the created package would be, and then exit. This information
# could be useful to other scripts.
if [ ! -z "${PRINT_PACKAGE_NAME}" ]; then
  echo "$PKGNAM-$VERSION-$ARCH-$BUILD$TAG.txz"
  exit 0
fi

# Configure ffmpeg features not autodetected by default.
# You can enable a lot of optional (not-autodetected) features by
# passing variables to the script (VAR=yes/no ./ffmpeg.SlackBuild).
# Unfortunately ffmpeg's configure doesn't support --enable-feature=yes
# syntax, so we have to do it the complicated way :/
# Additional optional (autodetected) dependencies are:
# - bzip2
# - libva
# - libvdpau
# - libX11
# - libxcb
# - nvdec/nvenc
# - sdl2
# - xz
# - zlib

## Enable autodetect using pkg-config -- SBo package names are above each check
#aom
if pkg-config --exists aom && [ "${AOM:-no}" != "no" ]; then libaom="--enable-libaom"; else libaom=""; fi
#celt
if pkg-config --exists celt && [ "${CELT:-yes}" != "no" ]; then libcelt="--enable-libcelt"; else libcelt=""; fi
#chromaprint
if pkg-config --exists libchromaprint && [ "${CHROMAPRINT:-yes}" != "no" ]; then chromaprint="--enable-chromaprint"; else chromaprint=""; fi
#codec2
if pkg-config --exists codec2 && [ "${CODEC2:-no}" != "no" ]; then libcodec2="--enable-libcodec2"; else libcodec2=""; fi
#dav1d
if pkg-config --exists libdav1d && [ "${DAV1D:-no}" != "no" ]; then libdav1d="--enable-libdav1d"; else libdav1d=""; fi
#fdk-aac -- creates non-redistributable binary
if pkg-config --exists fdk-aac && [ "${FDK-AAC:-yes}" != "no" ]; then fdk="--enable-libfdk-aac"; non_free="--enable-nonfree"; else fdk=""; fi
# jack
if pkg-config --exists jack && [ "${JACK:-no}" != "no" ]; then libjack="--enable-libjack"; else libjack=""; fi
#lensfun
if pkg-config --exists liblensfun && [ "${LENSFUN:-no}" != "no" ]; then liblensfun="--enable-liblensfun"; else liblensfun=""; fi
#libass
if pkg-config --exists libass && [ "${LIBASS:-yes}" != "no" ]; then libass="--enable-libass"; else libass=""; fi
#libbs2b
if pkg-config --exists libbs2b && [ "${BS2B:-yes}" != "no" ]; then libbs2b="--enable-libbs2b"; else libbs2b=""; fi
#libdc1394
if pkg-config --exists libdc1394-2 && [ "${DC1394:-no}" != "no" ]; then libdc1394="--enable-libdc1394"; else libdc1394=""; fi
#libgme
if pkg-config --exists libgme && [ "${GME:-yes}" != "no" ]; then libgme="--enable-libgme"; else libgme=""; fi
#libiec61883 & libavc1394
if pkg-config --exists libavc1394 libiec61883 && [ "${IEC61883:-yes}" != "no" ]; then libiec61883="--enable-libiec61883"; else libiec61883=""; fi
#libilbc
if pkg-config --exists libilbc && [ "${ILBC:-yes}" != "no" ]; then libilbc="--enable-libilbc"; else libilbc=""; fi
#libmodplug
if pkg-config --exists libmodplug && [ "${MODPLUG:-yes}" != "no" ]; then libmodplug="--enable-libmodplug"; else libmodplug=""; fi
#lv2
if pkg-config --exists lv2 && [ "${LV2:-no}" != "no" ]; then lv2="--enable-lv2"; else lv2=""; fi
#opencore-amrnb
if pkg-config --exists opencore-amrnb && [ "${OPENCORE:-yes}" != "no" ]; then opencore_amr="--enable-libopencore-amrnb --enable-libopencore-amrwb"; else opencore-amrnb=""; fi
#opencv
if pkg-config --exists opencv && [ "${OPENCV:-yes}" != "no" ]; then libopencv="--enable-libopencv"; else libopencv=""; fi
#rabbitmq-c
if pkg-config --exists librabbitmq && [ "${RABBITMQ:-no}" != "no" ]; then rabbitmq="--enable-librabbitmq"; else rabbitmq=""; fi
#rtmpdump
if pkg-config --exists librtmp && [ "${RTMP:-yes}" != "no" ]; then librtmp="--enable-librtmp"; else librtmp=""; fi
#rubberband
if pkg-config --exists rubberband && [ "${RUBBERBAND:-yes}" != "no" ]; then rubberband="--enable-librubberband"; else rubberband=""; fi
#soxr
if pkg-config --exists soxr && [ "${SOXR:-no}" != "no" ]; then libsoxr="--enable-libsoxr"; else libsoxr=""; fi
#srt
if pkg-config --exists srt && [ "${SRT:-no}" != "no" ]; then libsrt="--enable-libsrt"; else libsrt=""; fi
#tesseract
if pkg-config --exists tesseract && [ "${TESSERACT:-no}" != "no" ]; then tesseract="--enable-libtesseract"; else tesseract=""; fi
#twolame
if pkg-config --exists twolame && [ "${TWOLAME:-yes}" != "no" ]; then libtwolame="--enable-libtwolame"; else libtwolame=""; fi
#vapoursynth
if pkg-config --exists vapoursynth && [ "${VAPOURSYNTH:-no}" != "no" ]; then vapoursynth="--enable-vapoursynth"; else vapoursynth=""; fi
#vulkan-sdk
if pkg-config --exists vulkan && [ "${VULKAN:-no}" != "no" ]; then vulkan="--enable-vulkan"; else vulkan=""; fi
#x264
if pkg-config --exists x264 && [ "${X264:-yes}" != "no" ]; then libx264="--enable-libx264"; else libx264=""; fi
#x265
if pkg-config --exists x265 && [ "${X265:-yes}" != "no" ]; then libx265="--enable-libx265"; else libx265=""; fi
#zeromq
if pkg-config --exists libzmq && [ "${ZMQ:-no}" != "no" ]; then libzmq="--enable-libzmq"; else libzmq=""; fi
#zimg
if pkg-config --exists zimg && [ "${ZIMG:-no}" != "no" ]; then libzimg="--enable-libzimg"; else libzimg=""; fi
#zvbi
if pkg-config --exists zvbi-0.2 && [ "${ZVBI:-no}" != "no" ]; then libzvbi="--enable-libzvbi"; else libzvbi=""; fi

## These do not support pkg-config, checking for programs manually
#decklink-sdk
if [ -e /usr/include/decklink/DeckLinkAPI.h ] && [ "${DECKLINK:-no}" != "no" ]; then decklink="--enable-decklink" ; SLKCFLAGS="$SLKCFLAGS -I/usr/include/decklink" ; else decklink=""; fi
#flite
if [ -e /usr/include/flite/flite.h ] && [ "${FLITE:-no}" != "no" ]; then libflite="--enable-libflite"; else libflite=""; fi
#glslang
if [ -e /usr/include/glslang/Include/glslang_c_interface.h ] && [ "${GLSLANG:-no}" != "no" ];then libglslang="--enable-libglslang"; else libglslang=""; fi
#gsm
if [ -e /usr/include/gsm/gsm.h ] && [ "${GSM:-no}" != "no" ]; then libgsm="--enable-libgsm"; else libgsm=""; fi
#ladspa_sdk
if [ -e /usr/include/ladspa.h ] && [ "${LADSPA:-no}" != "no" ]; then ladspa="--enable-ladspa"; else ladspa=""; fi
#snappy
if [ -e /usr/include/snappy.h ] && [ "${SNAPPY:-no}" != "no" ]; then libsnappy="--enable-libsnappy"; else libsnappy=""; fi
#xvidcore
if [ -e /usr/include/xvid.h ] && [ "${XVID:-no}" != "no" ]; then libxvid="--enable-libxvid"; else libxvid=""; fi

# Default enabled features:
fontconfig="" ; [ "${FONTCONFIG:-yes}" != "no" ]  && fontconfig="--enable-libfontconfig"
freetype=""   ; [ "${FREETYPE:-yes}" != "no" ]    && freetype="--enable-libfreetype"
fribidi=""    ; [ "${FRIBIDI:-yes}" != "no" ]     && fribidi="--enable-libfribidi"
gnutls=""     ; [ "${GNUTLS:-yes}" != "no" ]      && gnutls="--enable-gnutls"
libbluray=""  ; [ "${BLURAY:-yes}" != "no" ]      && libbluray="--enable-libbluray"
libcaca=""    ; [ "${CACA:-yes}" != "no" ]        && libcaca="--enable-libcaca"
libcdio=""    ; [ "${LIBCDIO:-yes}" != "no" ]     && libcdio="--enable-libcdio"
libssh=""     ; [ "${LIBSSH:-yes}" != "no" ]      && libssh="--enable-libssh"
libtheora=""  ; [ "${THEORA:-yes}" != "no" ]      && libtheora="--enable-libtheora"
libv4l2=""    ; [ "${V4L2:-yes}" != "no" ]        && libv4l2="--enable-libv4l2"
libvorbis=""  ; [ "${VORBIS:-yes}" != "no" ]      && libvorbis="--enable-libvorbis"
libvpx=""     ; [ "${VPX:-yes}" != "no" ]         && libvpx="--enable-libvpx"
libwebp=""    ; [ "${WEBP:-yes}" != "no" ]        && libwebp="--enable-libwebp"
mp3lame=""    ; [ "${LAME:-yes}" != "no" ]        && mp3lame="--enable-libmp3lame"
opencl=""     ; [ "${OPENCL:-yes}" != "no" ]      && opencl="--enable-opencl"
opengl=""     ; [ "${OPENGL:-yes}" != "no" ]      && opengl="--enable-opengl"
openjpeg=""   ; [ "${JP2:-yes}" != "no" ]         && openjpeg="--enable-libopenjpeg"
pulse=""      ; [ "${PULSEAUDIO:-yes}" != "no" ]  && pulse="--enable-libpulse"
samba=""      ; [ "${SAMBA:-yes}" != "no" ]       && samba="--enable-libsmbclient"
libfrei0r=""  ; [ "${FREI0R:-yes}" != "no" ]      && libfrei0r="--enable-frei0r"
libspeex=""   ; [ "${SPEEX:-yes}" != "no" ]       && libspeex="--enable-libspeex"
libopenal=""  ; [ "${OPENAL:-yes}" != "no" ]      && libopenal="--enable-openal"
libopus=""    ; [ "${OPUS:-yes}" != "no" ]        && libopus="--enable-libopus"
libvidstab="" ; [ "${VIDSTAB:-yes}" != "no" ]     && libvidstab="--enable-libvidstab"
libxml2=""    ; [ "${LIBXML2:-yes}" != "no" ]     && libxml2="--enable-libxml2"
librsvg=""    ; [ "${LIBRSVG:-yes}" != "no" ]     && librsvg="--enable-librsvg"
libdrm=""     ; [ "${LIBDRM:-yes}" != "no" ]      && libdrm="--enable-libdrm"

# No default patent encumbered features:
aac=""        ; [ "${AAC:-no}" = "no" ]           && aac="--disable-encoder=aac"
# Don't include OpenSSL support by default (enabling creates non-redistributable binary):
ssl=""	      ; [ "${OPENSSL:-no}" != "no" ]      && { ssl="--enable-openssl" ; non_free="--enable-nonfree" ; }

rm -rf $PKG
mkdir -p $TMP $PKG
cd $TMP
rm -rf $PKGNAM-$VERSION
tar xvf $CWD/$PKGNAM-$VERSION.tar.xz || exit 1
cd $PKGNAM-$VERSION || exit 1

chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \+ -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \+

# Fix linking with flite:
sed -i "s| -lflite\"| -lflite -lm -lasound\"|" \
  ./configure

CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS" \
./configure \
  --prefix=/usr \
  --libdir=/usr/lib${LIBDIRSUFFIX} \
  --shlibdir=/usr/lib${LIBDIRSUFFIX} \
  --docdir=/usr/doc/$PKGNAM-$VERSION/html \
  --mandir=/usr/man \
  --disable-debug \
  --enable-shared \
  --disable-static \
  --enable-gpl \
  --enable-version3 \
  --enable-avresample \
  --arch=$ARCH \
  $non_free \
  $aac \
  $chromaprint \
  $decklink \
  $fdk \
  $fontconfig \
  $freetype \
  $fribidi \
  $gnutls \
  $ladspa \
  $libass \
  $libbluray \
  $libbs2b \
  $libcaca \
  $libcdio \
  $libcelt \
  $libdc1394 \
  $libflite \
  $libfrei0r \
  $libgme \
  $libgsm \
  $libiec61883 \
  $libilbc \
  $libmodplug \
  $libopenal \
  $libopencv \
  $libopus \
  $librtmp \
  $libsnappy \
  $libspeex \
  $libssh \
  $libtheora \
  $libtwolame \
  $libv4l2 \
  $libvidstab \
  $libvorbis \
  $libvpx \
  $libwebp \
  $libx264 \
  $libx265 \
  $libxvid \
  $libzmq \
  $libzvbi \
  $mp3lame \
  $opencl \
  $opencore_amr \
  $opengl \
  $openjpeg \
  $pulse \
  $rubberband \
  $samba \
  $ssl \
  $tesseract \
  $liblensfun \
  $libxml2 \
  $librsvg \
  $vulkan \
  $libjack \
  $libglslang \
  $libdrm \
  $libaom \
  $lv2 \
  $libdav1d \
  $rabbitmq \
  $libcodec2 \
  $libsoxr \
  $libsrt \
  $libzimg \
  $vapoursynth || exit 1

make $NUMJOBS || make || exit 1
make install DESTDIR=$PKG || exit 1
make install-man DESTDIR=$PKG || exit 1

find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | \
  grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

find $PKG/usr/man -type f -exec gzip -9 {} \+

mkdir -p $PKG/usr/doc/$PKGNAM-$VERSION/txt
cp -a \
  Changelog COPYING* CREDITS INSTALL* LICENSE* MAINTAINERS README* \
  RELEASE VERSION \
  $PKG/usr/doc/$PKGNAM-$VERSION
cp -a doc/*.txt $PKG/usr/doc/$PKGNAM-$VERSION/txt/
find . -name "RELEASE_NOTES" -exec cp -a {} $PKG/usr/doc/$PKGNAM-$VERSION/ \;

# If there's a ChangeLog, installing at least part of the recent history
# is useful, but don't let it get totally out of control:
if [ -r ChangeLog ]; then
  DOCSDIR=$(echo $PKG/usr/doc/${PKGNAM}-$VERSION)
  cat ChangeLog | head -n 1000 > $DOCSDIR/ChangeLog
  touch -r ChangeLog $DOCSDIR/ChangeLog
fi

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc

cd $PKG
/sbin/makepkg -l y -c n $TMP/$PKGNAM-$VERSION-$ARCH-$BUILD$TAG.txz
